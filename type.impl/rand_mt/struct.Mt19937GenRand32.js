(function() {var type_impls = {
"rand_mt":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Mt19937GenRand32\" class=\"impl\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#55\">source</a><a href=\"#impl-Clone-for-Mt19937GenRand32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"rand_mt/struct.Mt19937GenRand32.html\" title=\"struct rand_mt::Mt19937GenRand32\">Mt19937GenRand32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#55\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"rand_mt/struct.Mt19937GenRand32.html\" title=\"struct rand_mt::Mt19937GenRand32\">Mt19937GenRand32</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rand_mt::Mt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Mt19937GenRand32\" class=\"impl\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#62-67\">source</a><a href=\"#impl-Debug-for-Mt19937GenRand32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"rand_mt/struct.Mt19937GenRand32.html\" title=\"struct rand_mt::Mt19937GenRand32\">Mt19937GenRand32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#64-66\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rand_mt::Mt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Mt19937GenRand32\" class=\"impl\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#69-77\">source</a><a href=\"#impl-Default-for-Mt19937GenRand32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"rand_mt/struct.Mt19937GenRand32.html\" title=\"struct rand_mt::Mt19937GenRand32\">Mt19937GenRand32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#74-76\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Return a new <code>Mt19937GenRand32</code> with the default seed.</p>\n<p>Equivalent to calling <a href=\"rand_mt/struct.Mt19937GenRand32.html#method.new_unseeded\" title=\"associated function rand_mt::Mt19937GenRand32::new_unseeded\"><code>Mt19937GenRand32::new_unseeded</code></a>.</p>\n</div></details></div></details>","Default","rand_mt::Mt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu32;+N%5D%3E-for-Mt19937GenRand32\" class=\"impl\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#139-157\">source</a><a href=\"#impl-From%3C%5Bu32;+N%5D%3E-for-Mt19937GenRand32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u32.html\">u32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">624</a>]&gt; for <a class=\"struct\" href=\"rand_mt/struct.Mt19937GenRand32.html\" title=\"struct rand_mt::Mt19937GenRand32\">Mt19937GenRand32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#147-156\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(key: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u32.html\">u32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">624</a>]) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Recover the internal state of a Mersenne Twister using the past 624\nsamples.</p>\n<p>This conversion takes a history of samples from a RNG and returns a\nRNG that will produce identical output to the RNG that supplied the\nsamples.</p>\n</div></details></div></details>","From<[u32; 624]>","rand_mt::Mt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bu8;+4%5D%3E-for-Mt19937GenRand32\" class=\"impl\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#79-108\">source</a><a href=\"#impl-From%3C%5Bu8;+4%5D%3E-for-Mt19937GenRand32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">4</a>]&gt; for <a class=\"struct\" href=\"rand_mt/struct.Mt19937GenRand32.html\" title=\"struct rand_mt::Mt19937GenRand32\">Mt19937GenRand32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#105-107\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(seed: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">4</a>]) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Construct a Mersenne Twister RNG from 4 bytes.</p>\n<p>The given bytes are treated as a little endian encoded <code>u32</code>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"comment\">// Default MT seed\n</span><span class=\"kw\">let </span>seed = <span class=\"number\">5489_u32</span>.to_le_bytes();\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>mt = Mt19937GenRand32::from(seed);\n<span class=\"macro\">assert_ne!</span>(mt.next_u32(), mt.next_u32());</code></pre></div>\n<p>This constructor is equivalent to passing a little endian encoded <code>u32</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"comment\">// Default MT seed\n</span><span class=\"kw\">let </span>seed = <span class=\"number\">5489_u32</span>.to_le_bytes();\n<span class=\"kw\">let </span>mt1 = Mt19937GenRand32::from(seed);\n<span class=\"kw\">let </span>mt2 = Mt19937GenRand32::new(<span class=\"number\">5489_u32</span>);\n<span class=\"macro\">assert_eq!</span>(mt1, mt2);</code></pre></div>\n</div></details></div></details>","From<[u8; 4]>","rand_mt::Mt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu32%3E-for-Mt19937GenRand32\" class=\"impl\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#110-137\">source</a><a href=\"#impl-From%3Cu32%3E-for-Mt19937GenRand32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"rand_mt/struct.Mt19937GenRand32.html\" title=\"struct rand_mt::Mt19937GenRand32\">Mt19937GenRand32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#134-136\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(seed: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u32.html\">u32</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Construct a Mersenne Twister RNG from a <code>u32</code> seed.</p>\n<p>This function is equivalent to <a href=\"rand_mt/struct.Mt19937GenRand32.html#method.new\" title=\"associated function rand_mt::Mt19937GenRand32::new\"><code>new</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"comment\">// Default MT seed\n</span><span class=\"kw\">let </span>seed = <span class=\"number\">5489_u32</span>;\n<span class=\"kw\">let </span>mt1 = Mt19937GenRand32::from(seed);\n<span class=\"kw\">let </span>mt2 = Mt19937GenRand32::new(seed);\n<span class=\"macro\">assert_eq!</span>(mt1, mt2);\n\n<span class=\"comment\">// Non-default MT seed\n</span><span class=\"kw\">let </span>seed = <span class=\"number\">9927_u32</span>;\n<span class=\"kw\">let </span>mt1 = Mt19937GenRand32::from(seed);\n<span class=\"kw\">let </span>mt2 = Mt19937GenRand32::new(seed);\n<span class=\"macro\">assert_eq!</span>(mt1, mt2);</code></pre></div>\n</div></details></div></details>","From<u32>","rand_mt::Mt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Mt19937GenRand32\" class=\"impl\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#55\">source</a><a href=\"#impl-Hash-for-Mt19937GenRand32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"rand_mt/struct.Mt19937GenRand32.html\" title=\"struct rand_mt::Mt19937GenRand32\">Mt19937GenRand32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#55\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;mut __H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","rand_mt::Mt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mt19937GenRand32\" class=\"impl\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#185-450\">source</a><a href=\"#impl-Mt19937GenRand32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"rand_mt/struct.Mt19937GenRand32.html\" title=\"struct rand_mt::Mt19937GenRand32\">Mt19937GenRand32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.DEFAULT_SEED\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#187\">source</a><h4 class=\"code-header\">pub const <a href=\"rand_mt/struct.Mt19937GenRand32.html#associatedconstant.DEFAULT_SEED\" class=\"constant\">DEFAULT_SEED</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u32.html\">u32</a> = 5_489u32</h4></section></summary><div class=\"docblock\"><p>Default seed used by <a href=\"rand_mt/struct.Mt19937GenRand32.html#method.new_unseeded\" title=\"associated function rand_mt::Mt19937GenRand32::new_unseeded\"><code>Mt19937GenRand32::new_unseeded</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#214-221\">source</a><h4 class=\"code-header\">pub fn <a href=\"rand_mt/struct.Mt19937GenRand32.html#tymethod.new\" class=\"fn\">new</a>(seed: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u32.html\">u32</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new Mersenne Twister random number generator using the given\nseed.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5><h6 id=\"constructing-with-a-u32-seed\"><a class=\"doc-anchor\" href=\"#constructing-with-a-u32-seed\">§</a>Constructing with a <code>u32</code> seed</h6>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>seed = <span class=\"number\">123_456_789_u32</span>;\n<span class=\"kw\">let </span>mt1 = Mt19937GenRand32::new(seed);\n<span class=\"kw\">let </span>mt2 = Mt19937GenRand32::from(seed.to_le_bytes());\n<span class=\"macro\">assert_eq!</span>(mt1, mt2);</code></pre></div>\n<h6 id=\"constructing-with-default-seed\"><a class=\"doc-anchor\" href=\"#constructing-with-default-seed\">§</a>Constructing with default seed</h6>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>mt1 = Mt19937GenRand32::new(Mt19937GenRand32::DEFAULT_SEED);\n<span class=\"kw\">let </span>mt2 = Mt19937GenRand32::new_unseeded();\n<span class=\"macro\">assert_eq!</span>(mt1, mt2);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_with_key\" class=\"method\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#229-240\">source</a><h4 class=\"code-header\">pub fn <a href=\"rand_mt/struct.Mt19937GenRand32.html#tymethod.new_with_key\" class=\"fn\">new_with_key</a>&lt;I&gt;(key: I) -&gt; Self<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u32.html\">u32</a>&gt;,\n    I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Create a new Mersenne Twister random number generator using the given\nkey.</p>\n<p>Key can have any length.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unseeded\" class=\"method\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#257-259\">source</a><h4 class=\"code-header\">pub fn <a href=\"rand_mt/struct.Mt19937GenRand32.html#tymethod.new_unseeded\" class=\"fn\">new_unseeded</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new Mersenne Twister random number generator using the default\nfixed seed.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"comment\">// Default MT seed\n</span><span class=\"kw\">let </span>seed = <span class=\"number\">5489_u32</span>;\n<span class=\"kw\">let </span>mt = Mt19937GenRand32::new(seed);\n<span class=\"kw\">let </span>unseeded = Mt19937GenRand32::new_unseeded();\n<span class=\"macro\">assert_eq!</span>(mt, unseeded);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_u64\" class=\"method\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#274-278\">source</a><h4 class=\"code-header\">pub fn <a href=\"rand_mt/struct.Mt19937GenRand32.html#tymethod.next_u64\" class=\"fn\">next_u64</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Generate next <code>u64</code> output.</p>\n<p>This function is implemented by generating two <code>u32</code>s from the RNG and\nperforming shifting and masking to turn them into a <code>u64</code> output.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>mt = Mt19937GenRand32::new_unseeded();\n<span class=\"macro\">assert_ne!</span>(mt.next_u64(), mt.next_u64());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_u32\" class=\"method\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#293-303\">source</a><h4 class=\"code-header\">pub fn <a href=\"rand_mt/struct.Mt19937GenRand32.html#tymethod.next_u32\" class=\"fn\">next_u32</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Generate next <code>u32</code> output.</p>\n<p><code>u32</code> is the native output of the generator. This function advances the\nRNG step counter by one.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>mt = Mt19937GenRand32::new_unseeded();\n<span class=\"macro\">assert_ne!</span>(mt.next_u32(), mt.next_u32());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fill_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#326-345\">source</a><h4 class=\"code-header\">pub fn <a href=\"rand_mt/struct.Mt19937GenRand32.html#tymethod.fill_bytes\" class=\"fn\">fill_bytes</a>(&amp;mut self, dest: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>])</h4></section></summary><div class=\"docblock\"><p>Fill a buffer with bytes generated from the RNG.</p>\n<p>This method generates random <code>u32</code>s (the native output unit of the RNG)\nuntil <code>dest</code> is filled.</p>\n<p>This method may discard some output bits if <code>dest.len()</code> is not a\nmultiple of 4.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>mt = Mt19937GenRand32::new_unseeded();\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>buf = [<span class=\"number\">0</span>; <span class=\"number\">32</span>];\nmt.fill_bytes(<span class=\"kw-2\">&amp;mut </span>buf);\n<span class=\"macro\">assert_ne!</span>([<span class=\"number\">0</span>; <span class=\"number\">32</span>], buf);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>buf = [<span class=\"number\">0</span>; <span class=\"number\">31</span>];\nmt.fill_bytes(<span class=\"kw-2\">&amp;mut </span>buf);\n<span class=\"macro\">assert_ne!</span>([<span class=\"number\">0</span>; <span class=\"number\">31</span>], buf);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.recover\" class=\"method\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#366-387\">source</a><h4 class=\"code-header\">pub fn <a href=\"rand_mt/struct.Mt19937GenRand32.html#tymethod.recover\" class=\"fn\">recover</a>&lt;I&gt;(key: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"rand_mt/enum.RecoverRngError.html\" title=\"enum rand_mt::RecoverRngError\">RecoverRngError</a>&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u32.html\">u32</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Attempt to recover the internal state of a Mersenne Twister using the\npast 624 samples.</p>\n<p>This conversion takes a history of samples from a RNG and returns a\nRNG that will produce identical output to the RNG that supplied the\nsamples.</p>\n<p>This constructor is also available as a <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\"><code>TryFrom</code></a> implementation for\n<code>&amp;[u32]</code>.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>If <code>key</code> has less than 624 elements, an error is returned because there\nis not enough data to fully initialize the RNG.</p>\n<p>If <code>key</code> has more than 624 elements, an error is returned because the\nrecovered RNG will not produce identical output to the RNG that supplied\nthe samples.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reseed\" class=\"method\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#405-413\">source</a><h4 class=\"code-header\">pub fn <a href=\"rand_mt/struct.Mt19937GenRand32.html#tymethod.reseed\" class=\"fn\">reseed</a>(&amp;mut self, seed: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u32.html\">u32</a>)</h4></section></summary><div class=\"docblock\"><p>Reseed a Mersenne Twister from a single <code>u32</code>.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"comment\">// Default MT seed\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>mt = Mt19937GenRand32::new_unseeded();\n<span class=\"kw\">let </span>first = mt.next_u32();\nmt.fill_bytes(<span class=\"kw-2\">&amp;mut </span>[<span class=\"number\">0</span>; <span class=\"number\">512</span>]);\n<span class=\"comment\">// Default MT seed\n</span>mt.reseed(<span class=\"number\">5489_u32</span>);\n<span class=\"macro\">assert_eq!</span>(first, mt.next_u32());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reseed_with_key\" class=\"method\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#420-449\">source</a><h4 class=\"code-header\">pub fn <a href=\"rand_mt/struct.Mt19937GenRand32.html#tymethod.reseed_with_key\" class=\"fn\">reseed_with_key</a>&lt;I&gt;(&amp;mut self, key: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u32.html\">u32</a>&gt;,\n    I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Reseed a Mersenne Twister from am iterator of <code>u32</code>s.</p>\n<p>Key can have any length.</p>\n</div></details></div></details>",0,"rand_mt::Mt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Mt19937GenRand32\" class=\"impl\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#55\">source</a><a href=\"#impl-Ord-for-Mt19937GenRand32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"rand_mt/struct.Mt19937GenRand32.html\" title=\"struct rand_mt::Mt19937GenRand32\">Mt19937GenRand32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#55\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"rand_mt/struct.Mt19937GenRand32.html\" title=\"struct rand_mt::Mt19937GenRand32\">Mt19937GenRand32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#851-853\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#871-873\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#896-899\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","rand_mt::Mt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Mt19937GenRand32\" class=\"impl\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#55\">source</a><a href=\"#impl-PartialEq-for-Mt19937GenRand32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"rand_mt/struct.Mt19937GenRand32.html\" title=\"struct rand_mt::Mt19937GenRand32\">Mt19937GenRand32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#55\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"rand_mt/struct.Mt19937GenRand32.html\" title=\"struct rand_mt::Mt19937GenRand32\">Mt19937GenRand32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rand_mt::Mt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Mt19937GenRand32\" class=\"impl\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#55\">source</a><a href=\"#impl-PartialOrd-for-Mt19937GenRand32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"rand_mt/struct.Mt19937GenRand32.html\" title=\"struct rand_mt::Mt19937GenRand32\">Mt19937GenRand32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#55\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"rand_mt/struct.Mt19937GenRand32.html\" title=\"struct rand_mt::Mt19937GenRand32\">Mt19937GenRand32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1171\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1188\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1204\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1221\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","rand_mt::Mt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26%5Bu32%5D%3E-for-Mt19937GenRand32\" class=\"impl\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#159-183\">source</a><a href=\"#impl-TryFrom%3C%26%5Bu32%5D%3E-for-Mt19937GenRand32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u32.html\">u32</a>]&gt; for <a class=\"struct\" href=\"rand_mt/struct.Mt19937GenRand32.html\" title=\"struct rand_mt::Mt19937GenRand32\">Mt19937GenRand32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#180-182\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u32.html\">u32</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempt to recover the internal state of a Mersenne Twister using the\npast 624 samples.</p>\n<p>This conversion takes a history of samples from a RNG and returns a\nRNG that will produce identical output to the RNG that supplied the\nsamples.</p>\n<p>This conversion is implemented with <a href=\"rand_mt/struct.Mt19937GenRand32.html#method.recover\" title=\"associated function rand_mt::Mt19937GenRand32::recover\"><code>Mt19937GenRand32::recover</code></a>.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>If <code>key</code> has less than 624 elements, an error is returned because there\nis not enough data to fully initialize the RNG.</p>\n<p>If <code>key</code> has more than 624 elements, an error is returned because the\nrecovered RNG will not produce identical output to the RNG that supplied\nthe samples.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"rand_mt/enum.RecoverRngError.html\" title=\"enum rand_mt::RecoverRngError\">RecoverRngError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<&[u32]>","rand_mt::Mt"],["<section id=\"impl-Eq-for-Mt19937GenRand32\" class=\"impl\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#55\">source</a><a href=\"#impl-Eq-for-Mt19937GenRand32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"rand_mt/struct.Mt19937GenRand32.html\" title=\"struct rand_mt::Mt19937GenRand32\">Mt19937GenRand32</a></h3></section>","Eq","rand_mt::Mt"],["<section id=\"impl-StructuralPartialEq-for-Mt19937GenRand32\" class=\"impl\"><a class=\"src rightside\" href=\"src/rand_mt/mt.rs.html#55\">source</a><a href=\"#impl-StructuralPartialEq-for-Mt19937GenRand32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"rand_mt/struct.Mt19937GenRand32.html\" title=\"struct rand_mt::Mt19937GenRand32\">Mt19937GenRand32</a></h3></section>","StructuralPartialEq","rand_mt::Mt"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()